<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on TR</title>
    <link>http://ltratcliff.com/tags/golang/</link>
    <description>Recent content in golang on TR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Nov 2021 13:40:19 -0400</lastBuildDate><atom:link href="http://ltratcliff.com/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fun With Hugo</title>
      <link>http://ltratcliff.com/posts/funwithhugo/</link>
      <pubDate>Sat, 06 Nov 2021 13:40:19 -0400</pubDate>
      
      <guid>http://ltratcliff.com/posts/funwithhugo/</guid>
      <description>I&amp;rsquo;ve been digging the Hugo static website generator. Getting up and running quickly using github.io pages and Hugo was breeze. Here&amp;rsquo;s a few things I&amp;rsquo;ve learned over the last 2-3 days playing with Hugo
Recommendations This youtube playlist by giraffe academy was a great start. Shout out to Mike Dane for making this content
   Quickstart The Official docs: here help get you setup with installation, and a new project</description>
    </item>
    
    <item>
      <title>Offline Go Modules</title>
      <link>http://ltratcliff.com/posts/offline-go-modules/</link>
      <pubDate>Thu, 04 Nov 2021 15:11:42 -0400</pubDate>
      
      <guid>http://ltratcliff.com/posts/offline-go-modules/</guid>
      <description>Using go mod vendor With an existing module  copy go.mod and go.sum files from the offline PC to the internet PC  New module  create a folder on machine with internet access create a go module : go mod init offline  Download dependencies via vendor folder  create a offline_modules.go file :  touch offline_modules.go  add the dependencies you want to download (use _) :  package offline_modules import ( _ &amp;#34;github.</description>
    </item>
    
  </channel>
</rss>
